import os
import keras_ocr

# Th∆∞ m·ª•c ch·ª©a ·∫£nh
image_dir = "MauBiaSach"

# Kh·ªüi t·∫°o pipeline c·ªßa keras-ocr (g·ªìm text detector + recognizer)
pipeline = keras_ocr.pipeline.Pipeline()

# L·∫•y danh s√°ch file ·∫£nh .jpg trong th∆∞ m·ª•c
image_files = [os.path.join(image_dir, f) for f in os.listdir(image_dir) if f.lower().endswith(".jpg")]

if not image_files:
    print(f"‚ö† Kh√¥ng t√¨m th·∫•y ·∫£nh .jpg trong th∆∞ m·ª•c: {image_dir}")
    exit()

results = []

# OCR t·ª´ng ·∫£nh
for img_path in image_files:
    print(f"\nüëâ ƒêang OCR ·∫£nh: {img_path}")
    try:
        prediction_groups = pipeline.recognize([img_path])
        # prediction_groups[0] l√† list [(text, box), ...]
        sentence = " ".join([text for text, box in prediction_groups[0]])
    except Exception as e:
        sentence = f"L·ªói OCR: {e}"
    
    results.append((os.path.basename(img_path), sentence))
    print(f"   ‚Üí {sentence}")

# Xu·∫•t k·∫øt qu·∫£ ra file
output_path = os.path.join(os.getcwd(), "ketqua_keras.txt")
with open(output_path, "w", encoding="utf-8") as f:
    for img, sentence in results:
        f.write(f"·∫¢nh: {img}\n")
        f.write(f"{sentence}\n\n")

print(f"\n‚úÖ Ho√†n t·∫•t! K·∫øt qu·∫£ ƒë√£ l∆∞u v√†o {output_path}")